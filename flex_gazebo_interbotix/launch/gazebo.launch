<?xml version="1.0"?>
<launch>

    <arg name="hardware_interface" default="PositionJointInterface" />

    <arg name="robot_model" default="px150"/>
    <arg name="robot_name" default="$(arg robot_model)"/>
    <arg name="trajectory" default="true"/>

    <arg name="camera_sim" default="true"/>
    <arg name="robot_sim" default="true"/>
    <arg name="camera_name" default="rs_d435"/>

    <!-- Camera params -->
    <arg name="depth_width"         default="1280"/>
    <arg name="depth_height"        default="720"/>
    <arg name="color_width"         default="1280"/>
    <arg name="color_height"        default="720"/>


    <env name="GAZEBO_RESOURCE_PATH" value="$(find interbotix_gazebo)"/>

    <!-- Loads the Gazebo world. -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name"    value="$(find flex_gazebo_interbotix)/worlds/default.world"/>
        <arg name="debug"         value="false" />
        <arg name="gui"           value="true" />
        <arg name="paused"        value="true"/>
        <arg name="use_sim_time"  value="true"/>
        <arg name="headless"      value="false"/>
    </include>


    <!-- Load the URDF with the given hardware interface into the ROS Parameter Server -->
    <!-- robot -->
    <param name="$(arg robot_name)/robot_description" command="$(find xacro)/xacro --inorder '$(find flex_gazebo_interbotix)/urdf/robot.urdf.xacro'
      hardware_interface:=$(arg hardware_interface)
      robot_model:=$(arg robot_model)
      robot_name:=$(arg robot_name)
      camera_name:=$(arg camera_name)
      camera_sim:=$(arg camera_sim)

      depth_width:=$(arg depth_width)
      depth_height:=$(arg depth_height)
      color_width:=$(arg color_width)
      color_height:=$(arg color_height)
      "/>


    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node
      name="robot_urdf_spawner"
      pkg="gazebo_ros"
      type="spawn_model"
      respawn="false"
      output="screen"
      ns="$(arg robot_name)"
      args="-urdf -model $(arg robot_model) -param robot_description"/>

  <!-- Load the controller and state publisher -->
  <group if="$(arg robot_sim)">

      <rosparam
        file="$(find interbotix_gazebo)/config/$(arg robot_model)_gazebo_controllers.yaml"
        command="load"
        ns="$(arg robot_name)"/>

      <node
        name="controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="arm_controller gripper_controller joint_state_controller"/>
      <node
        name="robot_state_publisher"
        pkg="robot_state_publisher"
        type="robot_state_publisher"
        ns="$(arg robot_name)">
      </node>

  </group>

</launch>
