<?xml version="1.0"?>
<launch>

    <!-- ===================================================================================== -->
    <!-- |    Lauch file to start Gazebo with an IIWA using various controllers.	         | -->

    <!-- |    It allows to customize the name of the robot, for each robot                   | -->
    <!-- |	  its topics will be under a nameespace with the same name as the robot's.       | -->

    <!-- |	  One can choose to have a joint trajectory controller or                        | -->
    <!-- |    controllers for the single joints, using the "trajectory" argument.            | -->
    <!-- ===================================================================================== -->

    <arg name="hardware_interface" default="PositionJointInterface" />
    <arg name="robot_model" default="iiwa14"/>
    <arg name="robot_name" default="$(arg robot_model)" />
    <arg name="trajectory" default="true"/>

    <arg name="use_sdh" default="false"/>
    <arg name="use_iiwa" default="false"/>
    <arg name="use_interbotix" default="false"/>

    <arg name="camera_sim" default="true"/>
    <arg name="camera_name" default="rs_d435"/>

    <!-- Object params -->
    <arg name="object_x" default="-0.2"/>
    <arg name="object_y" default="0.4"/>
    <arg name="object_angle" default="1"/>
    <arg name="object_name" default="truss"/>
    <arg name="object_dimension" default="3d"/>

    <env name="GAZEBO_RESOURCE_PATH" value="$(find interbotix_gazebo)"/>

    <!-- Loads the Gazebo world. -->
    <include file="$(find flex_gazebo)/launch/flex_world.launch">
        <arg name="hardware_interface" value="$(arg hardware_interface)" />
        <arg name="robot_name" value="$(arg robot_name)" />
        <arg name="robot_model" value="$(arg robot_model)" />

        <arg name="camera_sim" value="$(arg camera_sim)"/>
        <arg name="camera_name" value="$(arg camera_name)"/>

        <arg name="use_sdh" value="$(arg use_sdh)"/>
        <arg name="use_iiwa" default="$(arg use_iiwa)"/>
        <arg name="use_interbotix" default="$(arg use_interbotix)"/>

        <arg name="object_x" value="$(arg object_x)"/>
        <arg name="object_y" value="$(arg object_y)"/>
        <arg name="object_angle" value="$(arg object_angle)"/>
        <arg name="object_name" value="$(arg object_name)"/>
        <arg name="object_dimension" value="$(arg object_dimension)"/>
    </include>

    <!-- Spawn controllers - it uses a JointTrajectoryController -->

    <group ns="$(arg robot_name)" if="$(arg use_iiwa)">
      <group if="$(arg trajectory)">

        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg robot_model)" />
        </include>
      </group>

      <!-- Spawn controllers - it uses an Effort Controller for each joint -->
      <group unless="$(arg trajectory)">

        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
          <arg name="hardware_interface" value="$(arg hardware_interface)" />
          <arg name="controllers" value="joint_state_controller
               $(arg hardware_interface)_J1_controller
               $(arg hardware_interface)_J2_controller
               $(arg hardware_interface)_J3_controller
               $(arg hardware_interface)_J4_controller
               $(arg hardware_interface)_J5_controller
               $(arg hardware_interface)_J6_controller
               $(arg hardware_interface)_J7_controller"/>
          <arg name="robot_name" value="$(arg robot_name)" />
          <arg name="model" value="$(arg robot_model)" />
        </include>
      </group>
    </group>

    <group if="$(arg use_interbotix)">
      <rosparam
        file="$(find interbotix_gazebo)/config/$(arg robot_model)_gazebo_controllers.yaml"
        command="load"
        ns="$(arg robot_name)"/>

      <node
        name="controller_spawner"
        pkg="controller_manager"
        type="spawner"
        respawn="false"
        output="screen"
        ns="$(arg robot_name)"
        args="arm_controller gripper_controller joint_state_controller"/>
    </group>

</launch>
