<?xml version="1.0"?>
<launch>

    <!-- Loads thee iiwa.world environment in Gazebo. -->

    <!-- These are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <arg name="robot_name" default="px150"/>
    <arg name="use_interbotix" default="true"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find flex_gazebo)/worlds/empty.world"/>
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- Load the URDF with the given hardware interface into the ROS Parameter Server -->
    <include file="$(find flex_gazebo)/launch/camera_upload.launch"/>

    <!-- Run a python script to send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="robot_urdf_spawner"
      pkg="gazebo_ros"
      type="spawn_model"
      respawn="false"
      output="screen"
      ns="$(arg robot_name)"
      args="-urdf -model rs -param robot_description"/>

    <group if="$(arg use_interbotix)">
      <node
        name="robot_state_publisher"
        pkg="robot_state_publisher"
        type="robot_state_publisher"
        ns="$(arg robot_name)">
      </node>
    </group>
</launch>
