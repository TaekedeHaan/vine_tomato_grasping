<?xml version="1.0"?>
<launch>

    <!-- ===================================================================================== -->
    <!-- |    Lauch file to start Gazebo with an IIWA using various controllers.	         | -->

    <!-- |    It allows to customize the name of the robot, for each robot                   | -->
    <!-- |	  its topics will be under a nameespace with the same name as the robot's.       | -->

    <!-- |	  One can choose to have a joint trajectory controller or                        | -->
    <!-- |    controllers for the single joints, using the "trajectory" argument.            | -->
    <!-- ===================================================================================== -->

    <arg name="hardware_interface" default="PositionJointInterface" />

    <arg name="robot_model" default="iiwa7"/>
    <arg name="robot_name" default="iiwa"/>
    <arg name="trajectory" default="true"/>

    <arg name="use_sdh" default="true"/>

    <arg name="camera_sim" default="true"/>
    <arg name="robot_sim" default="true"/>
    <arg name="camera_name" default="rs_d435"/>

    <!-- Object params -->
    <arg name="object_x" default="-0.2"/>
    <arg name="object_y" default="0.4"/>
    <arg name="object_angle" default="1"/>
    <arg name="object_name" default="truss"/>
    <arg name="object_dimension" default="3d"/>

    <arg name="object_origin_xyz" default="'$(arg object_x) $(arg object_y) 0.26'"/>
    <arg name="object_origin_rpy" default="'0 0 $(arg object_angle)'"/>

    <!-- Camera params -->
    <arg name="depth_width"         default="1280"/>
    <arg name="depth_height"        default="720"/>
    <arg name="color_width"         default="1280"/>
    <arg name="color_height"        default="720"/>

    <!-- Loads the Gazebo world. -->
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name"    value="$(find flex_gazebo)/worlds/default.world"/>
      <arg name="debug"         value="false" />
      <arg name="gui"           value="true" />
      <arg name="paused"        value="true"/>
      <arg name="use_sim_time"  value="true"/>
      <arg name="headless"      value="false"/>
    </include>


    <param name="$(arg robot_name)/robot_description" command="$(find xacro)/xacro --inorder '$(find flex_gazebo_iiwa)/urdf/robot.urdf.xacro'
      hardware_interface:=$(arg hardware_interface)
      robot_model:=$(arg robot_model)
      robot_name:=$(arg robot_name)
      camera_name:=$(arg camera_name)
      camera_sim:=$(arg camera_sim)
      use_sdh:=$(arg use_sdh)
      "/>

    <!-- world -->
    <param name="$(arg robot_name)/world_description" command="$(find xacro)/xacro --inorder '$(find flex_gazebo_iiwa)/urdf/world.urdf.xacro'
      object_name:=$(arg object_name)
      object_dimension:=$(arg object_dimension)
      object_origin_xyz:=$(arg object_origin_xyz)
      object_origin_rpy:=$(arg object_origin_rpy)

      depth_width:=$(arg depth_width)
      depth_height:=$(arg depth_height)
      color_width:=$(arg color_width)
      color_height:=$(arg color_height)
      "/>


  <group if="$(arg robot_sim)">

    <!-- Spawn controllers - it uses a JointTrajectoryController -->
      <group ns="$(arg robot_name)" if="$(arg use_sdh)">

        <include file="$(find flex_sdh_moveit)/launch/ros_controllers.launch"> <!-- if="$(eval arg('ee') == 'sdh')" -->
          <arg name="controllers" value="gripper_controller"/>
        </include>

      </group>

      <!--<group unless="$(arg use_sdh)">-->
      <group ns="$(arg robot_name)" if="$(arg trajectory)">

        <!-- Spawn controllers - it uses a JointTrajectoryController -->
        <!-- <rosparam file="$(find flex_gazebo)/config/iiwa_control.yaml" command="load" /> -->
        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
            <arg name="hardware_interface" value="$(arg hardware_interface)" />
            <arg name="controllers" value="joint_state_controller $(arg hardware_interface)_trajectory_controller" />
            <arg name="robot_name" value="$(arg robot_name)" />
            <arg name="model" value="$(arg robot_model)" />
        </include>
      </group>


      <!-- Spawn controllers - it uses an Effort Controller for each joint -->
      <group ns="$(arg robot_name)" unless="$(arg trajectory)">

        <include file="$(find iiwa_control)/launch/iiwa_control.launch">
          <arg name="hardware_interface" value="$(arg hardware_interface)" />
          <arg name="controllers" value="joint_state_controller
               $(arg hardware_interface)_J1_controller
               $(arg hardware_interface)_J2_controller
               $(arg hardware_interface)_J3_controller
               $(arg hardware_interface)_J4_controller
               $(arg hardware_interface)_J5_controller
               $(arg hardware_interface)_J6_controller
               $(arg hardware_interface)_J7_controller"/>
          <arg name="robot_name" value="$(arg robot_name)" />
          <arg name="model" value="$(arg robot_model)" />
        </include>
      </group>
  </group>

  <node
    name="robot_urdf_spawner"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="-urdf -model $(arg robot_model) -param robot_description"/>

  <node
    name="world_urdf_spawner"
    pkg="gazebo_ros"
    type="spawn_model"
    respawn="false"
    output="screen"
    ns="$(arg robot_name)"
    args="-urdf -model tomato -param world_description"/>

</launch>
